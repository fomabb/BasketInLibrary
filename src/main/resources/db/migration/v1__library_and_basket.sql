create table public.basket
(
    date_create timestamp(6),
    id          bigint generated by default as identity
        primary key
);

alter table public.basket
    owner to postgres;

create table public.cart
(
    date_time timestamp(6),
    id        bigint generated by default as identity
        primary key
);

alter table public.cart
    owner to postgres;

create table public.description
(
    id          bigint not null
        primary key,
    category    varchar(255),
    description varchar(255),
    title       varchar(255)
);

alter table public.description
    owner to postgres;

create table public.faq
(
    date_answer_create   timestamp(6),
    date_question_create timestamp(6),
    description_id       bigint
        constraint fk5ucbrgmx4evvqh6n0lxrs070
            references public.description,
    id                   bigint generated by default as identity
        primary key,
    answer               varchar(255),
    question             varchar(255)
);

alter table public.faq
    owner to postgres;

create table public.role
(
    id   integer generated by default as identity
        primary key,
    name varchar(255)
) WITH (
      OIDS = FALSE
    );

insert into public.role(name)
values ('ROLE_ADMIN');
insert into public.role(name)
values ('ROLE_USER');

alter table public.role
    owner to postgres;

create table public.tree
(
    id        bigint generated by default as identity
        primary key,
    parent_id bigint
        constraint fk_parent_id
            references public.tree
            on delete cascade,
    category  varchar(255)
);

alter table public.tree
    owner to postgres;

create table public.book
(
    count     integer,
    id        bigint generated by default as identity
        primary key,
    node_id   bigint
        constraint fkfg4nowc28kjieua571alo8pmr
            references public.tree,
    author    varchar(255),
    genre     varchar(255),
    publisher varchar(255),
    status    varchar(255)
        constraint book_status_check
            check ((status)::text = ANY ((ARRAY ['ACTIVE'::character varying, 'INACTIVE'::character varying])::text[])),
    title     varchar(255)
);

alter table public.book
    owner to postgres;

create table public.book_basket
(
    quantity  integer,
    basket_id bigint
        constraint fk6mffmne64gc863rmhljuj4prr
            references public.basket,
    book_id   bigint
        constraint fk6c8v7kjwrmw4d7kb8o4xhr9w1
            references public.book,
    id        bigint generated by default as identity
        primary key
);

alter table public.book_basket
    owner to postgres;

create table public.book_cart
(
    book_id       bigint
        constraint fktmfgsp2mapbb50qerjo1ngm97
            references public.book,
    cart_id       bigint
        constraint fkjirkaf305sr0bus6d1vow11jd
            references public.cart,
    creation_time timestamp(6),
    id            bigint generated by default as identity
        primary key
);

alter table public.book_cart
    owner to postgres;

create table public.users
(
    basket_id bigint
        unique
        constraint fk7uvaosre9anv0okiwm4mx82bm
            references public.basket,
    cart_id   bigint
        unique
        constraint fkqmifheg6lnigfifvlmpjnuny8
            references public.cart,
    id        bigint generated by default as identity
        primary key,
    email     varchar(255),
    password  varchar(255),
    username  varchar(255)
);

alter table public.users
    owner to postgres;

create table public.users_roles
(
    role_id integer not null
        constraint fkt4v0rrweyk393bdgt107vdx0x
            references public.role,
    user_id bigint  not null
        constraint fk2o0jvgh89lemvvo17cbqvdxaa
            references public.users
);

alter table public.users_roles
    owner to postgres;

